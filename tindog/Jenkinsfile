pipeline {
    agent any

    environment {
        // Define the image tag with the build number appended to the base name
        buildTag = "tindog-nginx-${env.BUILD_NUMBER}"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/sasaolu/docker-project.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Navigate into the tindog directory and build the Docker image
                    dir('tindog') {
                        sh "docker build -t ${buildTag} ."
                    }
                    sh 'docker images'
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Ensure previous container is removed if it exists
                    sh "docker rm -f tindog-container || true"
                    // Run the container using the image with the build number appended
                    sh "docker run -d --name tindog-container -p 80:80 ${buildTag}"
                    sh 'docker ps -a'
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    // Remove the Docker image
                    sh "docker rmi ${buildTag} || true"
                    sh 'docker images'
                    // Clean up Jenkins workspace
                    deleteDir()
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment and Cleanup Successful! The container is still running.'
        }
        failure {
            script {
                echo 'Deployment Failed!'
                // Optional: Stop and remove the container if something fails
                sh "docker rm -f tindog-container || true"
            }
        }
    }
}
